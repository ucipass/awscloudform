Description:
  VPC Template to deploy a total of 4 subnets 1 public 1 private in 2 avilability zones.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: DEMO-VPC

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.30.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 172.30.11.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 172.30.12.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 172.30.21.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 172.30.22.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2



  StackASAv:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/aa-cloudforms/demo-ec2-asav.yaml
      TimeoutInMinutes: '60'
      Parameters:
        EnvironmentName: !Sub ${EnvironmentName} ASAv
        VPC: !Ref VPC
        SubnetPublic: !Ref PublicSubnet1
        SubnetPrivate: !Ref PrivateSubnet1

#  StackEC21:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/aa-cloudforms/demo-ec2-ub.yaml
#      TimeoutInMinutes: '60'
#      Parameters:
#        EnvironmentName: !Sub ${EnvironmentName} EC1
#        VPC: !Ref VPC
#        Subnet: !Ref PublicSubnet1

#  StackEC22:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/aa-cloudforms/demo-ec2-ub.yaml
#      TimeoutInMinutes: '60'
#      Parameters:
#        EnvironmentName: !Sub ${EnvironmentName} EC2
#        VPC: !Ref VPC
#        Subnet: !Ref PublicSubnet2

#  StackEC23:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/aa-cloudforms/demo-ec2-ub.yaml
#      TimeoutInMinutes: '60'
#      Parameters:
#        EnvironmentName: !Sub ${EnvironmentName} EC3
#        VPC: !Ref VPC
#        Subnet: !Ref PrivateSubnet1

#  StackEC24:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/aa-cloudforms/demo-ec2-ub.yaml
#      TimeoutInMinutes: '60'
#      Parameters:
#        EnvironmentName: !Sub ${EnvironmentName} EC4
#        VPC: !Ref VPC
#        Subnet: !Ref PrivateSubnet2

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Join [ "", [ !Ref "EnvironmentName", "" ] ]

  PublicRouteTable:
    Description: A reference to the created RouteTable
    Value: !Ref PublicRouteTable

  PrivateRouteTable:
    Description: A reference to the created RouteTable
    Value: !Ref PrivateRouteTable