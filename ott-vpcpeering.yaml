Description: Create a VPC and a VPC Peering connection using the PeerRole to accept.
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: AA-OTT-PEERING

Resources:
  myVPCPeeringConnection:
    Type: 'AWS::EC2::VPCPeeringConnection'
    Properties:
      VpcId: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-DMZ-VPC"}}
      PeerVpcId: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-PRD-VPC"}}

  PeeringRouteDMZPRD:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-PRD-VpcCIDR"}}
      RouteTableId: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-DMZ-PublicRouteTable"}}
      VpcPeeringConnectionId:
        Ref: myVPCPeeringConnection

  PeeringRoutePRDDMZ:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-DMZ-VpcCIDR"}}
      RouteTableId: {"Fn::ImportValue" : {"Fn::Sub" : "AA-OTT-PRD-PrivateRouteTable"}}
      VpcPeeringConnectionId:
        Ref: myVPCPeeringConnection

Outputs:
  VPCPeeringConnectionId:
    Value: !Ref myVPCPeeringConnection